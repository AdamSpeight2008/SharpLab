// https://github.com/ashmind/TryRoslyn/issues/39#issuecomment-298152571
using System;
using System.Threading.Tasks;
using System.Runtime.CompilerServices;

static class C {
    static int M(int x) {
        return Foo(x + 0x12345).Result;
    }

    static async Task<int> Foo(int x) {
        return x;
    }
}

#=>

; This is an experimental implementation.
; Please report any bugs to https://github.com/ashmind/TryRoslyn/issues.

C.M(Int32)
    L0000: sub rsp, 0x28
    L0004: add ecx, 0x12345
    L000a: call C.Foo(Int32)
    L000f: mov rcx, rax
    L0012: cmp [rcx], ecx
    L0014: call System.Threading.Tasks.Task`1[[System.Int32, mscorlib]].get_Result()
    L0019: nop
    L001a: add rsp, 0x28
    L001e: ret

C.Foo(Int32)
    L0000: push rdi
    L0001: push rsi
    L0002: sub rsp, 0x78
    L0006: mov rsi, rcx
    L0009: lea rdi, [rsp+0x28]
    L000e: mov ecx, 0x14
    L0013: xor eax, eax
    L0015: rep stosd
    L0017: mov rcx, rsi
    L001a: mov [rsp+0x5c], ecx
    L001e: xor ecx, ecx
    L0020: lea rdx, [rsp+0x28]
    L0025: xorpd xmm0, xmm0
    L0029: movdqu [rdx], xmm0
    L002d: mov [rdx+0x10], rcx
    L0031: movdqu xmm0, [rsp+0x28]
    L0037: movdqu [rsp+0x60], xmm0
    L003d: mov rcx, [rsp+0x38]
    L0042: mov [rsp+0x70], rcx
    L0047: mov dword [rsp+0x58], 0xffffffff
    L004f: movdqu xmm0, [rsp+0x60]
    L0055: movdqu [rsp+0x40], xmm0
    L005b: mov rcx, [rsp+0x70]
    L0060: mov [rsp+0x50], rcx
    L0065: lea rcx, [rsp+0x40]
    L006a: lea rdx, [rsp+0x58]
    L006f: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, mscorlib]].Start[[C+<Foo>d__1, _]](<Foo>d__1 ByRef)
    L0074: lea rcx, [rsp+0x60]
    L0079: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, mscorlib]].get_Task()
    L007e: nop
    L007f: add rsp, 0x78
    L0083: pop rsi
    L0084: pop rdi
    L0085: ret

C+<Foo>d__1.MoveNext()
    L0000: push rbp
    L0001: sub rsp, 0x30
    L0005: lea rbp, [rsp+0x30]
    L000a: mov [rsp+0x20], rsp
    L000f: mov [rbp+0x10], rcx
    L0013: mov rcx, [rbp+0x10]
    L0017: mov edx, [rcx+0x4]
    L001a: mov rcx, [rbp+0x10]
    L001e: mov dword [rcx], 0xfffffffe
    L0024: mov rcx, [rbp+0x10]
    L0028: cmp [rcx], ecx
    L002a: mov rcx, [rbp+0x10]
    L002e: add rcx, 0x8
    L0032: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, mscorlib]].SetResult(Int32)
    L0037: nop
    L0038: lea rsp, [rbp]
    L003c: pop rbp
    L003d: ret
    L003e: push rbp
    L003f: sub rsp, 0x30
    L0043: mov rbp, [rcx+0x20]
    L0047: mov [rsp+0x20], rbp
    L004c: lea rbp, [rbp+0x30]
    L0050: mov rcx, [rbp+0x10]
    L0054: mov dword [rcx], 0xfffffffe
    L005a: mov rcx, [rbp+0x10]
    L005e: cmp [rcx], ecx
    L0060: mov rcx, [rbp+0x10]
    L0064: add rcx, 0x8
    L0068: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, mscorlib]].SetException(System.Exception)
    L006d: lea rax, [rip-0x3d]
    L0074: add rsp, 0x30
    L0078: pop rbp
    L0079: ret

C+<Foo>d__1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
    L0000: sub rsp, 0x28
    L0004: cmp [rcx], ecx
    L0006: add rcx, 0x8
    L000a: cmp [rcx], ecx
    L000c: add rcx, 0x8
    L0010: call System.Runtime.CompilerServices.AsyncMethodBuilderCore.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
    L0015: nop
    L0016: add rsp, 0x28
    L001a: ret